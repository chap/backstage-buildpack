#!/bin/bash

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BIN_DIR=$(cd "$(dirname "$0")" || exit; pwd) # absolute path

# fix for creating postgres schemas < Backstage 1.27
mkdir -p "$BUILD_DIR/.profile.d"
cp "$BIN_DIR/support/backstage-startup-config.sh" "$BUILD_DIR/.profile.d/backstage-startup-config.sh"


# error if $BASE_URL not set
if [ ! -f "$ENV_DIR/BASE_URL" ]; then
    cat <<EOM
       ## ERROR: BASE_URL must be set
         $ heroku domains
         example-123.herokuapp.com
         $ heroku config:set BASE_URL=https://example-123.herokuapp.com
EOM
    exit 1
else
    base_url=$(<"$ENV_DIR/BASE_URL")
    if [ "$base_url" == "https://CHANGE-ME.herokuapp.com" ]; then
        cat <<EOM
       ## WARNING: BASE_URL can be set
         $ heroku domains
         example-123.herokuapp.com
         $ heroku config:set BASE_URL=https://example-123.herokuapp.com
EOM
    fi
fi


# set package.json {scripts:build}
echo "       package.json"
if jq -e '.scripts.build == null' $BUILD_DIR/package.json > /dev/null; then
    jq '.scripts += {
    "build": "yarn build:backend --config ../../app-config.yaml --config ../../app-config.heroku.yaml"
}' "$BUILD_DIR/package.json" > tmp && mv tmp "$BUILD_DIR/package.json"
    echo "         - {scripts:build} created"
else
    echo "         - {scripts:build} exists | not overwritting"
fi

# set package.json {scripts:build}
if jq -e '.cacheDirectories == null' $BUILD_DIR/package.json > /dev/null; then
    jq '. += {
    "cacheDirectories": ["node_modules", "packages/app/node_modules", "packages/backend/node_modules"]
}' "$BUILD_DIR/package.json" > tmp && mv tmp "$BUILD_DIR/package.json"
    echo "         - {scripts:cacheDirectories} created"
else
    echo "         - {scripts:cacheDirectories} exists | not overwritting"
fi


# create app-config.heroku.yaml
if [ -f "$BUILD_DIR/app-config.heroku.yaml" ]; then
    echo "       app-config.heroku.yaml exists | not overwritting"
else
    cat <<EOM
       app-config.heroku.yaml created to use defaults
         - database: Heroku Postgres $DATABASE_URL
         - baseUrl: \$BASE_URL:\$PORT
EOM
    cp "$BIN_DIR/support/app-config.heroku.yaml" "$BUILD_DIR/app-config.heroku.yaml"
fi


# create Procfile
# can't use bin/release because nodejs buildpack will overwrite
if [ ! -f "$BUILD_DIR/Procfile" ]; then
    # Create Procfile with content
    echo "web: yarn workspace backend start --config ../../app-config.yaml --config ../../app-config.heroku.yaml" > $BUILD_DIR/Procfile
    cat <<EOM
       Procfile created to load app-config.heroku.yaml
         - ignoring app-config.production.yaml
EOM
else
    echo "       Procfile already exists | not overwritting"
fi
